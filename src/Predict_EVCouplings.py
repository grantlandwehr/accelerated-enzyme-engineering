# -*- coding: utf-8 -*-

import numpy as np
import pandas as pd
from itertools import product
from evcouplings.couplings import CouplingsModel

#the following code was adapted from https://github.com/debbiemarkslab/EVcouplings/blob/develop/notebooks/model_parameters_mutation_effects.ipynb

def evmutation_predictions(model, wt_pos_aa, output_loc=None):
    #model is the file location of the EVCouplings model generated by https://evcouplings.org/
    #wt_pos_aa is a dictionary of positions and corresponding amino acids, ex: {407:'A'}
    #output_loc is the file location to store the model predictions
    wt_pos = list(wt_pos_aa.keys())
    wt_aa = list(wt_pos_aa.values())

    ##generate the input mutation list for EVmutate
    ALL_AAS = ("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
    mutant_list = [[(wt_pos[i],wt_aa[i],mut) for mut in ALL_AAS] for i in range(len(wt_pos))]
    prediction_list = [list(tup) for tup in product(*mutant_list)]
    
    #make a mutations list that matches with the encodings structure
    all_combos = list(product(ALL_AAS, repeat = len(wt_aa)))   
    all_combos = ["".join(combo) for combo in all_combos]
    
    #make predictions using EVmutate
    c = CouplingsModel(model)
    
    predictions = np.empty(len(prediction_list))
    
    for i,n in enumerate(prediction_list):
        predictions[i], _, _ = c.delta_hamiltonian(n)
    
    mutations_dic = {"EVMutations":prediction_list, "Mutations":all_combos, "Predictions":predictions}
    output_df = pd.DataFrame(data=mutations_dic)
    
    if output_loc != None:
        output_df.to_csv(output_loc)

    return output_df